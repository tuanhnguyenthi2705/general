#!/bin/bash
set -euo pipefail

# ==================== CẤU HÌNH MÀU ====================
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

print_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}
print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}
print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# ==================== CÁC ĐƯỜNG DẪN CHÍNH ====================
OVPN_SOURCE_DIR="/home/$(logname)/ovpn"
OVPN_DEST_PATH="/home/$(logname)/.ovpn.ovpn"
TOKEN_FILE="/home/$(logname)/gensyn/huggingface.token"
BLOCKASSIST_DIR="/root/blockassist"
DEST_DIR="/root/blockassist/modal-login"
LOG_FILE="$BLOCKASSIST_DIR/LOG.log"

# ==================== KIỂM TRA GÓI EXPECT ====================
if ! command -v expect &> /dev/null; then
    apt-get update && apt-get install -y expect
fi

# ==================== ĐẾM SỐ TOKEN ====================
TOKENS=$(grep -vE '^\s*#|^\s*$' "$TOKEN_FILE")
NUM_LINES=$(echo "$TOKENS" | wc -l)

# ==================== HỎI SỐ BẮT ĐẦU ====================
print_warning "Nhap so thu tu bat dau (1-$NUM_LINES) [Mac dinh: 1 sau 5 giay]:"
START_INDEX=""
if read -t 5 START_INDEX; then
    if [[ ! "$START_INDEX" =~ ^[0-9]+$ ]] || [ "$START_INDEX" -lt 1 ] || [ "$START_INDEX" -gt "$NUM_LINES" ]; then
        print_warning "So khong hop le. Bat dau tu 1"
        START_INDEX=1
    else
        print_info "Bat dau tu so: $START_INDEX"
    fi
else
    print_warning "\nKhong co input. Bat dau tu 1"
    START_INDEX=1
fi

# ==================== HÀM SETUP VPN ====================
setup_vpn() {
    local i=$1
    local OVPN_FOLDER="$OVPN_SOURCE_DIR/$i"

    if [ ! -d "$OVPN_FOLDER" ]; then
        print_error "Thu muc VPN khong ton tai: $OVPN_FOLDER"
        return 1
    fi

    local OVPN_SOURCE_FILE=$(find "$OVPN_FOLDER" -maxdepth 1 -type f -name "*.ovpn" | head -n 1)
    if [ -z "$OVPN_SOURCE_FILE" ]; then
        print_error "Khong tim thay file .ovpn trong: $OVPN_FOLDER"
        return 1
    fi

    print_info "Su dung file VPN: $OVPN_SOURCE_FILE"
    cp "$OVPN_SOURCE_FILE" "$OVPN_DEST_PATH"
    systemctl restart ovpn
    sleep 5
    ip=$(curl -4 ifconfig.me || echo "unknown")
    print_info "VPN da duoc thiet lap thanh cong cho folder $i. IP hien tai la $ip"
}

# ==================== HÀM COPY DỮ LIỆU TRAIN ====================
copy_training_data() {
    local i=$1
    local SOURCE_DIR="/home/$(logname)/gensyn/$i/temp-data"
    if [ ! -d "$SOURCE_DIR" ]; then
        print_error "Thu muc nguon khong ton tai: $SOURCE_DIR"
        return 1
    fi
    rm -rf "$DEST_DIR/temp-data"
    cp -r "$SOURCE_DIR"/ "$DEST_DIR/"
}

# ==================== HÀM CHẠY TRAINING ====================
run_training() {
    local i=$1
    cd "$BLOCKASSIST_DIR"

    if [ ! -f "$TOKEN_FILE" ]; then
        print_error "File token khong ton tai: $TOKEN_FILE"
        return 1
    fi

    TOKEN=$(sed -n "${i}p" "$TOKEN_FILE")
    if [ -z "$TOKEN" ]; then
        print_error "Khong the lay token tu dong $i trong file $TOKEN_FILE"
        return 1
    fi

    EXPECT_SCRIPT=$(mktemp)
    cat > "$EXPECT_SCRIPT" << EOF
#!/usr/bin/expect -f
set timeout -1
spawn python run.py
expect {
    "*token*" {
        send "$TOKEN\r"
        exp_continue
    }
    "*Token*" {
        send "$TOKEN\r"
        exp_continue
    }
    "*huggingface*" {
        send "$TOKEN\r"
        exp_continue
    }
    "*HuggingFace*" {
        send "$TOKEN\r"
        exp_continue
    }
    eof
}
EOF
    chmod +x "$EXPECT_SCRIPT"

    print_info "Bat dau chay training..."
    {
        echo "$(date)"
        echo "Source: $i | IP: $ip"
        "$EXPECT_SCRIPT" 2>&1
        echo "=== Training completed at $(date) ==="
    } | tee -a "$LOG_FILE"

    rm -f "$EXPECT_SCRIPT"
    print_info "Training hoan thanh cho i = $i"
}

# ==================== HÀM XỬ LÝ DẢI SỐ ====================
process_range() {
    local start=$1
    local end=$2

    for i in $(seq "$start" "$end"); do
        print_info "Xu ly folder $i"

        if ! setup_vpn "$i"; then
            print_error "Loi thiet lap VPN cho i = $i. Bo qua..."
            continue
        fi

        if ! copy_training_data "$i"; then
            print_error "Loi copy data cho i = $i. Bo qua..."
            continue
        fi

        if ! run_training "$i"; then
            print_error "Loi training cho i = $i. Tiep tuc voi folder tiep theo..."
            continue
        fi

        SLEEP_TIME=$((RANDOM % 21 + 20))
        echo "Sleep $SLEEP_TIME seconds" | tee -a "$LOG_FILE"
        sleep $SLEEP_TIME
    done
}

# ==================== CHẠY CHÍNH ====================
echo "Auto training session started at $(date) | Starting from index: $START_INDEX" | tee -a "$LOG_FILE"

if [ "$START_INDEX" -le "$NUM_LINES" ]; then
    print_info "=== Chay tu $START_INDEX den $NUM_LINES ==="
    process_range "$START_INDEX" "$NUM_LINES"
fi

if [ "$START_INDEX" -gt 1 ]; then
    print_info "=== Quay lai chay tu 1 den $((START_INDEX - 1)) ==="
    process_range 1 "$((START_INDEX - 1))"
fi

print_info "Hoan thanh tat ca! Xem logs: tail -f $LOG_FILE"
